---
name: Build and Push Node image to Google Cloud Platform

on:
  push:
    branches: [development]

env:
  IMAGE_NAME: todo-app-development-image
  PROJECT_ID: todo-app-development-356018
  GAR_LOCATION: europe-west2
  SERVICE: todo-app-development-image 
  REGION: europe-west2 

jobs:
  build-push-gcr:
    permissions:
      contents: "write"
      id-token: "write"

    name: Build and Push to GCP
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Google Auth
        id: auth
        uses: "google-github-actions/auth@v0"
        with:
          token_format: "access_token"
          workload_identity_provider: "${{ secrets.WIF_PROVIDER }}" 
          service_account: "${{ secrets.WIF_SERVICE_ACCOUNT }}"

      # Authenticate Docker to Google Cloud Artifact Registry
      - name: Docker Auth
        id: docker-auth
        uses: "docker/login-action@v1"
        with:
          username: "oauth2accesstoken"
          password: "${{ steps.auth.outputs.access_token }}"
          registry: "${{ env.GAR_LOCATION }}-docker.pkg.dev"

      - name: Build Docker Image
        run: docker build . -t "${{ env.IMAGE_NAME }}:latest"

      - name: Automatic Tagging of Releases
        id: increment-git-tag
        run: |
          bash ./.github/scripts/git_update.sh -v patch

      - name: Push Docker Image to Artifact Registry
        env:
          GIT_TAG: ${{steps.increment-git-tag.outputs.git-tag}}
        run: |-
          docker tag "${{ env.IMAGE_NAME }}:latest" "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/images/${{ env.IMAGE_NAME }}:latest"
          docker tag "${{ env.IMAGE_NAME }}:latest" "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/images/${{ env.IMAGE_NAME }}:${{ github.sha }}"
          docker tag "${{ env.IMAGE_NAME }}:latest" "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/images/${{ env.IMAGE_NAME }}:$GIT_TAG"
          docker push --all-tags "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/images/${{ env.IMAGE_NAME }}"

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          # NOTE: If using a pre-built image, update the image name here
          image: "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/images/${{ env.IMAGE_NAME }}:latest"

      # If required, use the Cloud Run url output in later steps
      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
